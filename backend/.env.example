# ==============================================
# SUPABASE CONFIGURATION (REQUIRED)
# ==============================================
# Get these from your Supabase project settings

# Your Supabase project URL
SUPABASE_URL=https://qxcmrdgdsxzjigsxjjjl.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4Y21yZGdkc3h6amlnc3hqampsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAzMzgxNzgsImV4cCI6MjA2NTkxNDE3OH0.-74qJtYXdFjoCJ-iDpGDZbKR0kbi7CD95rtbeJY0TDA
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4Y21yZGdkc3h6amlnc3hqampsIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDMzODE3OCwiZXhwIjoyMDY1OTE0MTc4fQ.lD4sFqpdK17dQXmx8nTLrkh_vU_olOCLXshFCvg_N9c
# JWT Secret for token verification (IMPORTANT - Get from Supabase Dashboard > Settings > API > JWT Secret)
SUPABASE_JWT_SECRET=wwjDvyXMYHmIrNFfdQuhHdQBUqdsjugqzU35Lx+eY1bmBkjCWu9H/7I45JqfKOjqjsKp33b4uhaC6pshtnG6Ew==

# ==============================================
# SERVER CONFIGURATION
# ==============================================

# Port for the API server
PORT=3000

# Environment (development, staging, production)
NODE_ENV=development

# ==============================================
# FRONTEND INTEGRATION
# ==============================================

# Your frontend URL (update with your actual frontend URL)
FRONTEND_URL=http://localhost:5173

# Additional allowed origins for CORS (comma-separated)
ADDITIONAL_CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080,http://localhost:4173

# ==============================================
# CORS CONFIGURATION
# ==============================================

CORS_CREDENTIALS=true
CORS_MAX_AGE=86400

# ==============================================
# SECURITY CONFIGURATION
# ==============================================

# Security headers
HELMET_ENABLED=true
CSP_ENABLED=true

# Session configuration
SESSION_TIMEOUT_HOURS=24
REFRESH_TOKEN_EXPIRY_DAYS=30

# ==============================================
# FILE UPLOAD CONFIGURATION
# ==============================================

# File upload limits
MAX_FILE_SIZE_MB=50
MAX_FILES_PER_UPLOAD=1

# PDF processing configuration
PDF_PROCESSING_TIMEOUT_MS=30000
ENABLE_PDF_ANALYSIS=true

# ==============================================
# RATE LIMITING CONFIGURATION
# ==============================================

RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=200

# ==============================================
# ANALYTICS CONFIGURATION
# ==============================================

ENABLE_REAL_TIME_ANALYTICS=true
ANALYTICS_RETENTION_DAYS=365

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# Database connection timeout
DB_TIMEOUT_MS=10000

# API response timeout
API_TIMEOUT_MS=30000

# Enable detailed logging (true/false)
ENABLE_VERBOSE_LOGGING=false

# Enable performance monitoring
ENABLE_PERFORMANCE_MONITORING=true

# ==============================================
# DEVELOPMENT TOOLS
# ==============================================

# Enable API documentation endpoint
ENABLE_API_DOCS=true

# Enable debug endpoints
ENABLE_DEBUG_ENDPOINTS=true

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Enable performance profiling
ENABLE_PROFILING=false

# ==============================================
# SETUP INSTRUCTIONS FOR CINESTUDY
# ==============================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Update the SUPABASE_* values with your actual Supabase credentials
# 3. IMPORTANT: Get your JWT secret from Supabase Dashboard > Settings > API > JWT Secret
# 4. Update FRONTEND_URL with your actual frontend URL (default: http://localhost:5173)
# 5. Run the database migration in Supabase SQL Editor (see MIGRATION_INSTRUCTIONS.md)
# 6. Start the server: npm run dev
# 7. Test the integration at http://localhost:3000/health

# ==============================================
# GETTING SUPABASE CREDENTIALS
# ==============================================

# 1. Go to https://supabase.com/dashboard
# 2. Select your project (or create a new one)
# 3. Go to Settings > API
# 4. Copy:
#    - Project URL → SUPABASE_URL
#    - Project API Keys:
#      - anon/public → SUPABASE_ANON_KEY
#      - service_role → SUPABASE_SERVICE_KEY
#    - JWT Secret → SUPABASE_JWT_SECRET (VERY IMPORTANT!)

# ==============================================
# DATABASE MIGRATION REQUIRED
# ==============================================

# IMPORTANT: You MUST run the database migration before the backend will work properly!
# 
# 1. Go to your Supabase Dashboard
# 2. Navigate to SQL Editor
# 3. Copy and paste the entire contents of backend/src/migrations/001_initial_setup.sql
# 4. Execute the migration
# 5. Verify tables are created in the Table Editor
#
# This migration creates:
# - user_profiles, user_stats, topics, documents, document_pages
# - study_sessions, sprints, exam_goals, achievements, user_achievements
# - pdf_content_analysis, reading_analytics, reading_feedback
# - All RLS policies for security
# - Indexes for performance
# - Triggers for automatic user creation

# ==============================================
# FRONTEND CONNECTION TEST
# ==============================================

# Test your backend connection:
# 1. Start backend: npm run dev
# 2. Visit: http://localhost:3000/health
# 3. Visit: http://localhost:3000/api/docs
# 4. Test CORS: http://localhost:3000/api/cors-test
# 5. Test login: POST to http://localhost:3000/api/auth/test-login (dev only)

# ==============================================
# SECURITY NOTES
# ==============================================

# - Never commit .env files to version control
# - Keep SUPABASE_SERVICE_KEY secret and secure
# - SUPABASE_JWT_SECRET is critical for token verification
# - Use different credentials for development/staging/production
# - Regularly rotate API keys and secrets
# - Monitor access logs for unusual activity

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Common issues and solutions:

# 1. "401 Unauthorized" errors:
# - Verify SUPABASE_JWT_SECRET is set correctly
# - Check that JWT tokens are being passed in Authorization header
# - Ensure user exists in auth.users table

# 2. Database connection errors:
# - Verify SUPABASE_URL and keys are correct
# - Check that your Supabase project is active
# - Ensure database migration has been run

# 3. CORS errors:
# - Ensure FRONTEND_URL matches your frontend URL exactly
# - Add your frontend URL to ADDITIONAL_CORS_ORIGINS
# - Check that your frontend is running on the specified port

# 4. File upload errors:
# - Check that Supabase storage bucket 'pdf-documents' exists
# - Verify storage policies are correctly configured
# - Ensure MAX_FILE_SIZE_MB is appropriate

# 5. "Table does not exist" errors:
# - Run the database migration from src/migrations/001_initial_setup.sql
# - Check that all tables were created successfully
# - Verify RLS policies are enabled

# ==============================================
# API ENDPOINTS FOR YOUR FRONTEND
# ==============================================

# Base URL: http://localhost:3000/api

# Authentication:
# POST /api/auth/signup - User registration
# POST /api/auth/login - User login  
# GET /api/auth/me - Get current user
# POST /api/auth/logout - Sign out
# POST /api/auth/test-login - Test login (dev only)

# Documents:
# GET /api/documents - Get user documents
# POST /api/documents/upload - Upload PDF
# GET /api/documents/:id - Get document details
# DELETE /api/documents/:id - Delete document

# Topics:
# GET /api/topics - Get topics with progress
# POST /api/topics - Create topic
# GET /api/topics/:id - Get topic details
# PATCH /api/topics/:id - Update topic
# DELETE /api/topics/:id - Delete topic

# Study Sessions:
# POST /api/sessions/start - Start study session
# PATCH /api/sessions/:id/end - End session
# GET /api/sessions - Get session history

# Analytics:
# GET /api/analytics/dashboard - Dashboard data
# GET /api/analytics/trends - Reading trends
# POST /api/analytics/feedback - Submit feedback

# Achievements:
# GET /api/achievements - Get achievements with progress
# POST /api/achievements/check - Check for new achievements