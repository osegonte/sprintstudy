# ==============================================
# SUPABASE CONFIGURATION (REQUIRED)
# ==============================================
# Get these from your Supabase project settings

# Your Supabase project URL
SUPABASE_URL=https://fqklgodkqkhgfcedykse.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZxa2xnb2RrcWtoZ2ZjZWR5a3NlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk3OTA4OTgsImV4cCI6MjA2NTM2Njg5OH0.OIpxgH9HZERcKx_NgZ-dxeisdHF3gqTUxQjSvlm1IoU
SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZxa2xnb2RrcWtoZ2ZjZWR5a3NlIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0OTc5MDg5OCwiZXhwIjoyMDY1MzY2ODk4fQ.G4E_GjDN8hRnHQmiJ4HPA1_z1zJCxSXrwGNhIvATiLY

# ==============================================
# SERVER CONFIGURATION
# ==============================================

# Port for the API server (Railway will override this in production)
PORT=3000

# Environment (development, staging, production)
NODE_ENV=development

# ==============================================
# FRONTEND INTEGRATION (LOVABLE)
# ==============================================

# Your Lovable frontend URL (for CORS)
FRONTEND_URL=https://lovable.dev/projects/your-project-id

# Lovable preview URL pattern (for CORS wildcard matching)
LOVABLE_PREVIEW_URL=https://projects.lovable.dev

# Additional allowed origins (comma-separated)
ADDITIONAL_CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# ==============================================
# OPTIONAL CONFIGURATION
# ==============================================

# JWT Secret (if using custom JWT, otherwise Supabase handles this)
# JWT_SECRET=your-jwt-secret-here

# File upload limits
MAX_FILE_SIZE_MB=50
MAX_FILES_PER_UPLOAD=1

# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=200

# PDF processing configuration
PDF_PROCESSING_TIMEOUT_MS=30000
ENABLE_PDF_ANALYSIS=true

# Analytics configuration
ENABLE_REAL_TIME_ANALYTICS=true
ANALYTICS_RETENTION_DAYS=365

# ==============================================
# DEPLOYMENT CONFIGURATION
# ==============================================

# Database connection timeout
DB_TIMEOUT_MS=10000

# API response timeout
API_TIMEOUT_MS=30000

# Enable detailed logging (true/false)
ENABLE_VERBOSE_LOGGING=false

# Enable performance monitoring
ENABLE_PERFORMANCE_MONITORING=true

# ==============================================
# THIRD-PARTY INTEGRATIONS (OPTIONAL)
# ==============================================

# Email service configuration (for notifications)
# EMAIL_PROVIDER=sendgrid
# SENDGRID_API_KEY=your-sendgrid-api-key
# FROM_EMAIL=noreply@yourdomain.com

# AI/ML service configuration (for enhanced PDF analysis)
# OPENAI_API_KEY=your-openai-api-key
# ANTHROPIC_API_KEY=your-anthropic-api-key

# Monitoring and error tracking
# SENTRY_DSN=your-sentry-dsn
# DATADOG_API_KEY=your-datadog-api-key

# ==============================================
# SECURITY CONFIGURATION
# ==============================================

# CORS configuration
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400

# Security headers
HELMET_ENABLED=true
CSP_ENABLED=true

# Session configuration
SESSION_TIMEOUT_HOURS=24
REFRESH_TOKEN_EXPIRY_DAYS=30

# ==============================================
# LOVABLE-SPECIFIC CONFIGURATION
# ==============================================

# Enable Lovable-specific endpoints and features
LOVABLE_INTEGRATION_ENABLED=true

# Lovable webhook URL (for notifications)
# LOVABLE_WEBHOOK_URL=https://your-lovable-webhook-url

# Enable enhanced CORS for Lovable domains
LOVABLE_CORS_ENABLED=true

# Enable real-time features for Lovable
LOVABLE_REALTIME_ENABLED=true

# ==============================================
# DEVELOPMENT TOOLS
# ==============================================

# Enable API documentation endpoint
ENABLE_API_DOCS=true

# Enable debug endpoints
ENABLE_DEBUG_ENDPOINTS=true

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Enable performance profiling
ENABLE_PROFILING=false

# ==============================================
# EXAMPLE VALUES (REPLACE WITH YOUR ACTUAL VALUES)
# ==============================================

# Example configuration for local development:
# SUPABASE_URL=https://abcdefghijklmnop.supabase.co
# SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
# SUPABASE_SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
# FRONTEND_URL=https://lovable.dev/projects/d60cae03-32c1-4bb7-ba2c-d07967b8e43a
# NODE_ENV=development
# PORT=3000

# ==============================================
# SETUP INSTRUCTIONS
# ==============================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Update the SUPABASE_* values with your actual Supabase credentials
# 3. Update FRONTEND_URL with your actual Lovable project URL
# 4. Run the database migration in Supabase SQL Editor
# 5. Start the server: npm run dev
# 6. Test the integration: npm run test:lovable

# ==============================================
# SECURITY NOTES
# ==============================================

# - Never commit .env files to version control
# - Keep SUPABASE_SERVICE_KEY secret and secure
# - Use different credentials for development/staging/production
# - Regularly rotate API keys and secrets
# - Monitor access logs for unusual activity

# ==============================================
# TROUBLESHOOTING
# ==============================================

# Common issues and solutions:

# CORS errors:
# - Ensure FRONTEND_URL matches your Lovable project URL exactly
# - Check that LOVABLE_CORS_ENABLED=true
# - Verify your Lovable project is using the correct API URL

# Database connection errors:
# - Verify SUPABASE_URL and keys are correct
# - Check that your Supabase project is active
# - Ensure database migration has been run

# File upload errors:
# - Check that Supabase storage bucket 'pdf-documents' exists
# - Verify storage policies are correctly configured
# - Ensure MAX_FILE_SIZE_MB is appropriate

# Authentication errors:
# - Verify Supabase Auth is enabled in your project
# - Check that RLS policies are correctly configured
# - Ensure JWT tokens are being passed correctly from frontend
