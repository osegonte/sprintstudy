{
  "name": "cinestudy-backend",
  "version": "2.3.0",
  "description": "CineStudy API - Enhanced Study Planning Backend with Authentication & Database Integration",
  "main": "src/server.js",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "start": "node src/server.js",
    "dev": "nodemon src/server.js",
    "dev:debug": "DEBUG=* nodemon src/server.js",
    "dev:verbose": "ENABLE_VERBOSE_LOGGING=true nodemon src/server.js",
    "build": "npm run lint && npm run test",
    "test": "jest --detectOpenHandles --forceExit",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "test:unit": "jest --testPathPattern=unit",
    "test:health": "curl -f http://localhost:3000/health || exit 1",
    "test:api": "curl -f http://localhost:3000/api/docs || exit 1",
    "lint": "eslint src/**/*.js --fix",
    "lint:check": "eslint src/**/*.js",
    "format": "prettier --write src/**/*.js",
    "format:check": "prettier --check src/**/*.js",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "db:migrate": "echo 'Run the SQL migration in your Supabase SQL Editor from src/migrations/001_initial_setup.sql'",
    "db:seed": "echo 'Seed data is included in the migration'",
    "setup": "npm install && npm run setup:env",
    "setup:env": "cp .env.example .env && echo 'üìù Created .env file - please update with your credentials'",
    "clean": "rm -rf node_modules package-lock.json && npm install",
    "update-deps": "npx npm-check-updates -u && npm install"
  },
  "keywords": [
    "cinestudy",
    "study-planner",
    "api",
    "rest",
    "express",
    "supabase",
    "pdf",
    "education",
    "analytics",
    "authentication",
    "nodejs",
    "backend"
  ],
  "author": {
    "name": "CineStudy Team",
    "email": "dev@cinestudy.com"
  },
  "license": "MIT",
  "dependencies": {
    "@supabase/supabase-js": "^2.39.7",
    "bcryptjs": "^2.4.3",
    "compression": "^1.8.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-fileupload": "^1.4.3",
    "express-rate-limit": "^7.1.5",
    "express-slow-down": "^2.0.1",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^3.0.3",
    "pdf-parse": "^1.1.1",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.55.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-security": "^1.7.1",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "prettier": "^3.1.0",
    "supertest": "^6.3.3"
  },
  "optionalDependencies": {
    "sharp": "^0.33.0"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/server.js",
      "!src/config/*.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    },
    "testMatch": [
      "**/tests/**/*.test.js",
      "**/src/**/*.test.js"
    ]
  },
  "eslintConfig": {
    "extends": [
      "airbnb-base",
      "plugin:jest/recommended",
      "plugin:security/recommended"
    ],
    "env": {
      "node": true,
      "es2021": true,
      "jest": true
    },
    "plugins": [
      "jest",
      "security"
    ],
    "rules": {
      "no-console": "off",
      "no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "prefer-const": "error",
      "no-var": "error",
      "security/detect-object-injection": "off",
      "import/no-dynamic-require": "off",
      "global-require": "off"
    }
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "es5",
    "tabWidth": 2,
    "semi": true,
    "printWidth": 100
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "js,json",
    "ignore": [
      "src/**/*.test.js",
      "node_modules/*"
    ],
    "env": {
      "NODE_ENV": "development"
    },
    "delay": 2000
  }
}